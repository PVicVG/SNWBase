<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_big_ring</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// A big ring, used for taking players to stages.
image_speed = 0.2;
active = false;
cancel_timer = -1;

// Setup these in creation code;
name = "SKY VILLAGE";
rm = rm_skyvillage;
exit_id = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animate
    if active
    {
        // Move up and down   
            y = ystart + obj_level_controller.y;
            image_speed += 0.005;
        
        // Dissappear
            if (image_speed &gt; 1 or keyboard_check_pressed(global.key_enter)) &amp;&amp; sprite_index = spr_big_ring
            {
                sprite_index = spr_big_ring_disappear;
                image_speed = 0.2;
                aud_play_simple(general_big_ring)
            }
        
        // Lock The Player
            obj_player.x = x;
            obj_player.y = y;
            
            with obj_player
            {
                visible = false;
                control_locked = true;
                player_inputs_null()
            }
            
        // Cancel
            if keyboard_check_pressed(global.key_special)
            {
                image_speed = 0.2;
                active = false;
                sprite_index = spr_big_ring;
                cancel_timer = 80;
                
                with (obj_player)
                {
                    control_locked = false;
                    visible = true;  
                    state = STATE_HURT;  
                    y_speed = -8;
                    x_speed = -2 * animation_direction;
                }
            }
            
    }
    
    // Cancel Timer
    if cancel_timer = 0
    {
        with (obj_level_controller)
        {
            event_user(1);
        }
    }
    
    if cancel_timer &gt; -1
    {
        cancel_timer --;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Activate Ring
    if (!active &amp;&amp; cancel_timer == -1 &amp;&amp; other.state != STATE_HURT)
    {
        // Activate Big Ring
            active = true;
            aud_play_simple(general_special_launch)
            image_index = 0;
        
        // Hide HUD
            with obj_level_controller
            {
                event_user(0);
            }
        
        // Sparks
            with other
            {
                scr_create_smoke(x, y, spr_bonus_spark);
            }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Warp to Room
    if sprite_index = spr_big_ring_disappear
    {
        // Disappear
            sprite_index = spr_empty;
            global.checkpoint_x = -1;
            global.checkpoint_y = -1;
            
        // Fade to room.
            with instance_create(x,y,obj_fade_to_value_white)
            {
            value = other.rm;
            }
        
        // Exit.
            global.exit_id = exit_id;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

if sprite_index = spr_big_ring
{
    draw_set_halign(fa_center);
    draw_set_font(global.small_font);
    draw_set_alpha(0.5)
    draw_set_color(c_black)
    draw_rectangle(x - (string_width(name)/2), y - (string_height(name)/2), x + (string_width(name)/2), y + (string_height(name)/2), false)
    draw_set_alpha(1)
    draw_set_color(c_white)
    draw_text(x, y - 4, name)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
