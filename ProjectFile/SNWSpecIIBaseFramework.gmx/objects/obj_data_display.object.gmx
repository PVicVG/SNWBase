<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init
// Image Speed and Offset for Drawing
image_speed = 0.2;
off = 0;

// Options
option[1] = "Continue"
option[2] = "Reset"
current_option = 1;
option_max = 2;

// Character
player_index = global.player_id;
animation = "idle";
animation_data()
char_y = 300;
TweenFireTo(id, EaseInOutQuad, 0, false, 0, 80, "char_y", 132);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Offset
off += 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player Animations
if char_y &gt; 132
{
    if instance_exists(obj_fade_next)
    {
        animation = "crouch";
    }
    else
    {
        animation = "look up"
    }
}
else
{
    animation = "idle"
}

animation_data()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Scroll Options

// Exit In Case Not Active
if instance_exists(obj_fade_in) or instance_exists(obj_confirm_option_reset) or instance_exists(obj_fade_next)
{
    exit;
}

    // Scroll Down
            if keyboard_check_pressed(global.key_left)
            {
                // Play Sound
                    aud_play_simple(menu_bleep)
                
                // Current Option is not Highlighted anymore.
                    update_option(current_option + 1)
                
                // Release key
                    keyboard_clear(global.key_left)
            }
        
    // Scroll Up
            if keyboard_check_pressed(global.key_right)
            {
                // Play Sound
                    aud_play_simple(menu_bleep)
                
                // Current Option is not Highlighted anymore.
                    update_option(current_option - 1)
                    
                // Release key
                    keyboard_clear(global.key_right)
            }

    // Option Max and Min
        // Go to the bottom
            if (current_option &lt; 1) 
            {
                update_option(option_max);
            }
        
        // Go to the top
            if (current_option &gt; option_max)
            {
                update_option(1);
            }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Press Options
if keyboard_check_released(global.key_enter)
{
    if current_option = 1
    {
        instance_create(0, 0, obj_fade_next)
        TweenFireTo(id, EaseInOutQuad, 0, false, 0, 20, "char_y", 300);
    }
    
    if current_option = 2
    {
        instance_create(0, 0, obj_confirm_option_reset);
    }
    
    aud_play_simple(menu_accept)
    keyboard_clear(global.key_enter);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw BG
draw_background(bg_blue_gradient, 0, 0)

draw_set_blend_mode(bm_add);
draw_sprite_tiled(spr_sonic_texture, 0, -off, -off);
draw_set_blend_mode(bm_normal);

// Player
apply_player_pal()
if player_index == CHAR_TAILS
{
    draw_sprite(spr_tail_part_1, off/6, 40, char_y - 13)
}
draw_sprite(sprite, sprite_get_number(sprite) - 1, 50, char_y - 13)
pal_swap_reset()

draw_sprite(spr_platform_metal, 0, 50, char_y)

// UI
draw_sprite(spr_savescreen_interface, -1, 0, 0);
draw_sprite_tiled_horizontal(spr_SNW_ui_hbars, -1, -off/3, 211);
draw_sprite_tiled_horizontal(spr_SNW_ui_hbars_reversed, -1, off/3, 248);
draw_sprite(spr_black_bars, -1, 0, 0);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drawing Text
draw_set_color(c_white)
draw_set_halign(fa_right)
draw_set_font(global.title_card)
draw_text(479, 17, string_upper(string(global.player_name)))

draw_set_font(global.main_font)
draw_set_halign(fa_left)
draw_text(183,62,
"Tokens: " + string(global.player_tokens) + "#" +
"Cash: " + string(global.player_cash) + "#" +
"XP: " + string(global.xp) + "#" +
"Level: " + string(global.level) + "#" +
"Score: " + string(global.player_score) + "#" +
"Emeralds: " + string(global.player_emeralds) + "#" +
"Played Time: " + string(global.played_time) + "#"
)


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Options
draw_set_font(global.main_font)

// Draw Option 1
    if current_option = 1
    {
        draw_set_color(c_yellow)
    }
    else
    {
        draw_set_color(c_white)
    }
    
    draw_text(143, 231, option[1])

// Draw Option 2
    if current_option = 2
    {
        draw_set_color(c_yellow)
    }
    else
    {
        draw_set_color(c_white)
    }
        
draw_text(304, 231, option[2])

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
