<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_big_ring_unavailable</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// A big ring, used for special stages.
rm = rm_specialstage_1;
image_speed = 0.2;
active = false;

if global.checkpoint_x != x
{
sprite_index = spr_big_ring;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animate
    if active
    {
        // Move up and down   
            y = ystart + obj_level_controller.y;
            image_speed += 0.005;
        
        // Dissappear
            if image_speed &gt; 1 &amp;&amp; sprite_index = spr_big_ring
            {
                sprite_index = spr_big_ring_disappear;
                image_speed = 0.2;
                aud_play_simple(general_big_ring)
            }
        
        // Lock The Player
            obj_player.x = x;
            obj_player.y = y;
            
            with obj_player
            {
                visible = false;
                control_locked = true;
                player_inputs_null()
            }
    }
    
    // Sparkles
    if sprite_index = spr_big_ring
    {
        instance_create(x, y, obj_invincibility_sparkle)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Activate Ring
    if !active &amp;&amp; sprite_index = spr_big_ring
    {
        if global.player_emeralds &lt; 7
        {
            // Activate Big Ring
                active = true;
                audio_stop_all()
                obj_audio.zone_results = true;
                aud_play_simple(general_special_launch)
                scr_cam_shake()           
                aud_play_simple(special_supersonic)
                image_index = 0;
            
            // Hide HUD
                with obj_level_controller
                {
                    event_user(0);
                }
            
            // Sparks
                with other
                {
                    scr_create_smoke(x, y, spr_bonus_spark);
                }
        }
        else
        {
            // Give 50 Rings
                global.player_rings += 50;
                
            // Sound
                aud_play_simple(general_big_ring)
                aud_play_simple(general_ring_monitor)
                
            // Destroy
                dummy_effect_create(spr_big_ring_disappear, 0.25, x, y, 2, 0)
                instance_destroy()
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Warp to Room
    if sprite_index = spr_big_ring_disappear
    {
        // Disappear
            sprite_index = spr_empty;
        
        // Fade to room.
            with instance_create(x,y,obj_fade_to_value_white)
            {
            value = other.rm;
            }
            
        // Go to the bonus stage.
            global.player_shield = obj_player.shield;
            global.previous_room = room;
            global.bonus_stage   = true; 
            global.bonus_rings = global.player_rings; 
            global.temp_restart_x = x;
            global.temp_restart_y = y;  
            global.checkpoint_x = -1;
            global.checkpoint_y = -1;


    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
