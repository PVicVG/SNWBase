<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999996</depth>
  <persistent>0</persistent>
  <parentName>obj_indestructible</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Result Variables.
 
 // Chaos Emeralds;
    global.player_emeralds += 1;
    display_emerald = false;
    alarm[6] = 30;
    
 // Bonuses:
    bonus_rings = (obj_SS_player.Rings * 100);
    bonus_total = (0);

    seconds = floor(global.game_time/1000);
    
    if(seconds &lt;= 29)
    {
       bonus_time   = 50000;
    }
    else if(seconds &gt; 29 &amp;&amp; seconds &lt;= 44)
    {
            bonus_time   = 10000;
    }
    else if(seconds &gt;= 45 &amp;&amp; seconds &lt;= 59)
    {
            bonus_time   = 5000;
    }
    else if(seconds &gt;= 60 &amp;&amp; seconds &lt;= 89)
    {
            bonus_time   = 4000;
    }
    else if(seconds &gt;= 90 &amp;&amp; seconds &lt;= 119)
    {
            bonus_time   = 3000;
    }
    else if(seconds &gt;= 120 &amp;&amp; seconds &lt;= 179)
    {
            bonus_time   = 2000;
    }
    else if(seconds &gt;= 180 &amp;&amp; seconds &lt;= 239)
    {
            bonus_time   = 1000;
    }
    else if(seconds &gt;= 240 &amp;&amp; seconds &lt;= 299)
    {
            bonus_time   = 500;
    }
    else if(seconds &gt;= 300)
    {
            bonus_time   = 0;
    }
    bonus_continue = 0;
 
 // Reset Variables.
    global.checkpoint_x = -1;
    global.checkpoint_y = -1;
    
 // Allow counting:
    can_do      = 0; 
    can_count   = 0;
    count_sound = 1;
    
 // Skip:
    can_skip = 0; 

 // Positions / Going out:
    going_out      =    0;
    go_off         =  global.screen_width;
    go_off_2       = -global.screen_width;
    
 // Text Positions:
    result_gfx_position_completed = false;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Positions
black_bars_alpha = 0;
sonic_texture_alpha = 0;
black_box_alpha = 0;

blue_bar_yscale = 0;
top_bar_y = -32;
bottom_bar_y = -32;
main_text_y = -64;

time_bonus_x = 500;
ring_bonus_x = 500;
total_x = 500;

off = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Do Tweens

TweenFireTo(id, EaseInOutQuad, 0, false, 10, 20, "black_bars_alpha", 1);
TweenFireTo(id, EaseInOutQuad, 0, false, 40, 20, "sonic_texture_alpha", 1);
TweenFireTo(id, EaseInOutQuad, 0, false, 80, 40, "black_box_alpha", 1);

TweenFireTo(id, EaseInOutQuad, 0, false, 50, 25, "bottom_bar_y", 100);
TweenFireTo(id, EaseInOutQuad, 0, false, 60, 25, "top_bar_y", 28);
TweenFireTo(id, EaseInOutQuad, 0, false, 95, 40, "blue_bar_yscale", 1)
TweenFireTo(id, EaseOutBounce, 0, false, 125, 120, "main_text_y", 38)

TweenFireTo(id, EaseInOutQuad, 0, false, 180, 20, "time_bonus_x", 96)
TweenFireTo(id, EaseInOutQuad, 0, false, 200, 20, "ring_bonus_x", 96)
TweenFireTo(id, EaseInOutQuad, 0, false, 220, 20, "total_x", 96)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Toggle Emeralds
if display_emerald = true
{
    display_emerald = false;
    alarm[6] = 30;
    exit;
}

if display_emerald = false
{
    display_emerald = true;
    alarm[6] = 30;
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// End it.

    if(going_out = 0)
    {
       if(go_off_2 &lt; 0)
       {
          go_off_2 += 20;
          alarm[5] = 1;
       }
    }
    else
    {
       if(instance_exists(obj_fade_next) == false)
       {            
          // Save progress. 
             if(global.save_selected != 0)
             {
               save_create(global.save_selected);
             }          
          
          // End Bonus
                global.bonus_stage   = false;
                global.returning_from_bonus = true;
                with instance_create(x, y, obj_fade_to_value)
                {
                value = global.previous_room;
                }
                global.previous_room = noone;
                global.checkpoint_x = global.temp_restart_x;
                global.checkpoint_y = global.temp_restart_y;
                global.temp_restart_x = -1;
                global.temp_restart_y = -1;    
             
       }
    
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Going out.
    
    if(going_out = 0)
    {
       if(go_off &gt; 0)
       {
          go_off -= 20;
          alarm[4] = 1;
       }
       else
       {
          alarm[5] = 1;
       }
    }
    else
    {
       alarm[5] = 1; 
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop Counting.

    can_count = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Counting sounds.
 
    if(count_sound = 1)
    {
       can_skip  = 1;
       aud_play_sound(general_score_points, global.sfx_volume, 1, 0, 0)
       alarm[2] = 5;
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Time Bonus.

    if(bonus_time &gt; 0)
    {
       bonus_time          -= 10;
       bonus_total         += 10;
       global.player_score += 10;
       alarm[1]             =  1;
    }
    else
    {
       bonus_time = 0;
       alarm[1]   = -1;
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Ring Bonus.
    
    if(bonus_rings &gt; 0)
    {
       bonus_rings         -= 10;
       bonus_total         += 10;
       global.player_score += 10;
       alarm[0]             =  1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Offset
off += 1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Text Positions.
    
    if(going_out == 0)
    {
       
       if(time_bonus_x == 96 &amp;&amp; ring_bonus_x == 96 &amp;&amp; total_x == 96 &amp;&amp;
          result_gfx_position_completed == false)
       {
          result_gfx_position_completed = true;
          
          // Trigger Bonuses.
             alarm[0] = 140;
             if(bonus_time &gt; 0)
             {
                alarm[1] = 140;
             }
             alarm[2] = 140;
             alarm[3] = 140;
             alarm[4] = 30;          
       }
    }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Finish counting bonuses.

    if(can_count == 0)
    {
       if(bonus_rings == 0 &amp;&amp; bonus_time == 0)
       {
          if(can_do == 0)
          {
             count_sound         = 0;
             global.player_rings = 0;
             can_do              = 1;
             aud_play_sound(general_score_result, global.sfx_volume, 1, 0, 0);             
          }
          if(can_do = 1 &amp;&amp; audio_is_playing(general_score_result) == false)
          {
             can_do = 2;
          }
          if(going_out = 0 &amp;&amp; can_do == 2)
          {
             if(audio_is_playing(jingle_scoring) == false)
             {
                going_out = 1
                alarm[4] = 100;
             }
          }
       }
    }

    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Skip counting.

    if(keyboard_check(global.key_enter) &amp;&amp; can_skip == 1)
    {
       bonus_total        += bonus_time + bonus_rings;
       bonus_time          =  0;      
       bonus_rings         =  0;      
       alarm[0]            = -1;
       alarm[1]            = -1;  
       alarm[3]            =  1; 
       can_skip            =  0;
       global.player_score += bonus_total;      
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    // Sonic Texture
        draw_sprite_tiled_ext(spr_sonic_texture, -1, view_xview[0] - off, view_yview[0] - off, 1, 1, c_white, sonic_texture_alpha)
    
    // Black Box
        draw_sprite_ext(spr_results_black_box, -1, view_xview[0] + 240, view_yview[0], black_box_alpha, 1, 0, c_white, black_box_alpha)
    
    // Middle Bar    
        draw_sprite_ext(spr_title_card_blue, -1, view_xview[0], view_yview[0] + 69, 1, blue_bar_yscale, 0, c_white, 1)    
       
    // Top HBar
        draw_sprite_tiled_horizontal_ext(spr_SNW_ui_hbars, off/8, view_xview[0] + off, view_yview[0] + top_bar_y, 1, 1, 0, c_white, 1)
        
    // Bottom HBar
        draw_sprite_tiled_horizontal_ext(spr_SNW_ui_hbars_reversed, off/8, view_xview[0] - off, view_yview[0] + bottom_bar_y, 1, 1, 0, c_white, 1)

    // Draw Got Chaos Emerald Text
        draw_set_font(global.title_card)   
        draw_set_halign(fa_center)     
        
        if global.player_emeralds &lt; 7
        {
        draw_text(view_xview[0] + 240, view_yview[0] + main_text_y,"YOU GOT #A CHAOS EMERALD")
        }
        else
        {
        draw_text(view_xview[0] + 240, view_yview[0] + main_text_y,"YOU GOT #ALL EMERALDS")
        }
        
    // Chaos Emeralds
        draw_sprite_ext(spr_display_chaos_emeralds, global.player_emeralds - 1 + display_emerald, view_xview[0] + 286, view_yview[0] + 120, 1, 1, 0, c_white, black_box_alpha)
    
    // Set Up drawing bonus
        draw_set_font(global.lives_font);
        draw_set_halign(fa_right);
        
    // Time Bonus   
        draw_sprite_ext(spr_results, 1, view_xview[0] + time_bonus_x, view_yview[0] + 152, 1, 1, 0, c_white, 1)           
        draw_number_zero(view_xview[0] + time_bonus_x + 273, view_yview[0] + 156, ''+ string(bonus_time),  0)
        
    // Ring Bonus   
        draw_sprite_ext(spr_results, 2, view_xview[0] + ring_bonus_x, view_yview[0] + 152, 1, 1, 0, c_white, 1)           
        draw_number_zero(view_xview[0] + ring_bonus_x + 273, view_yview[0] + 175, ''+ string(bonus_rings),  0)
        
    // Total
        draw_sprite_ext(spr_results, 3, view_xview[0] + total_x, view_yview[0] + 152, 1, 1, 0, c_white, 1)           
        draw_number_zero(view_xview[0] + total_x + 273, view_yview[0] + 213, string(bonus_total),  0)
                 
    // Black Bars
       draw_sprite_ext(spr_black_bars, -1, view_xview[0], view_yview[0], 1, 1, 0, c_white, black_bars_alpha)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
