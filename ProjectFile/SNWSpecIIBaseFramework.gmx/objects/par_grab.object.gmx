<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_indestructible</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.

    type     = GRAB_STATIC; // Grab type. (STATIC, POLE or DISTANCE)
    distance = 0;           // Distance to next grab handle. Only used if type equals DISTANCE.
    bbox     = 14;          // Used to position the players y position. Usually 14.
    left     = false;       // Is it the most left handle?
    right    = false;       // Is it the most right handle?
    middle   = false;       // Is it a middle handle?
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if another instance of this object exists on either side.

    if(!place_meeting(x-1, y, par_grab) &amp;&amp; place_meeting(x+1, y, par_grab))
    {
       left        = true;
       right       = false;
       middle      = false;
       //image_blend = c_red;
    } 
    else
    if(place_meeting(x-1, y, par_grab) &amp;&amp; !place_meeting(x+1, y, par_grab))
    {
       left        = false;
       right       = true;
       middle      = false;
       //image_blend = c_blue;
    }     
    else
    if(!place_meeting(x-1, y, par_grab) &amp;&amp; !place_meeting(x+1, y, par_grab))
    {
       left        = false;    
       right       = false;
       middle      = true;
       //image_blend = c_purple;
    }  
    

    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
