<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_monitor_broken</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>obj_indestructible</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.
 
    icon_position         = 0;
    icon_move_length      = 45;
    icon_disappear_length = 30;
    icon_rewarded         = -1;    
    landed                = false;
    y_speed               = 0;      
    y_gravity             = 0.21875;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Gravity.

 // Check for collision:
    if(landed == false)
    {
       repeat(abs(y_speed))
       {
              if(!place_meeting(x, y+sign(y_speed), par_terrain))
              {
                 y += sign(y_speed);
              }
               else
              {
                 landed  = true;
                 y_speed = 0;
              }           
       }
    // Add Gravity:
       y_speed += y_gravity;
       if(y_speed &gt; 12)
       {
          y_speed = 12;
       }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Icon movement.

 // Moving up:
    if(icon_move_length)
    {
       icon_position    -= 1;
       icon_move_length -= 1;
    }
    else
 // Stop moving.
    if(icon_move_length == 0 &amp;&amp; icon_disappear_length)
    {
       icon_disappear_length -= 1;
    }
 
 // Give rewards:
    if(icon_move_length == 0 &amp;&amp; icon_rewarded == -1)
    {
       icon_rewarded = 1;
       event_user(0);
    } 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Rewards.
  
 // Rings:
    if(icon == 0)
    {
       global.player_rings += 10;
       aud_play_sound(general_ring, global.sfx_volume, 1, 0, 0);
    }
  
 // Bubble Shield:
    if(icon == 1)
    {
       if(parent.shield != 0)
       { 
          parent.shield = 0;
          with(parent.shield_obj)
          {
               instance_destroy();
          }
          parent.shield_obj = noone;
       }
       parent.shield = SHIELD_BUBBLE;
       aud_play_sound(shield_get_bubble, global.sfx_volume, 1, 0, 0);
    }    
  
 // Fire Shield:
    if(icon == 2)
    {
       if(parent.shield != 0)
       { 
          parent.shield = 0;
          with(parent.shield_obj)
          {
               instance_destroy();
          }
          parent.shield_obj = noone;
       }
       parent.shield = SHIELD_FIRE;
       aud_play_sound(shield_get_flame, global.sfx_volume, 1, 0, 0);
    }  
  
 // Electricity Shield:
    if(icon == 3)
    {
       if(parent.shield != 0)
       { 
          parent.shield = 0;
          with(parent.shield_obj)
          {
               instance_destroy();
          }
          parent.shield_obj = noone;
       }
       parent.shield = SHIELD_ELECTRICITY;
      aud_play_sound(shield_get_electricity, global.sfx_volume, 1, 0, 0);
    }     
  
 // Life:
    if(icon == 4)
    {
       global.player_lives += 1;
       global.sfx_volume = obj_audio.zone_my_bgm_volume;
       aud_play_sound(player_life, global.sfx_volume, 1, 0, 0);
    }  
  
 // Invincibility:
    if(icon == 5)
    { 
       parent.invincibility       = 2;
       parent.invincibility_timer = 900;  
       if(global.bgm_volume &lt;= 0.0 &amp;&amp; audio_is_playing(player_life))
       {
          global.bgm_volume = 1;
       }
       aud_play_sound(jingle_invincibility, global.bgm_volume, 1, 1, 0);
    }    
  
 // Sneakers:
    if(icon == 6)
    {
       parent.speedshoe_timer = 900    
       parent.speedshoe       = 1;
    }   
  
 // Eggman:
    if(icon == 7)
    {
       with(parent)
       {
            player_state_hurt(other, false);
       }
    }   

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw  Broken Monitor.

 // Broken part:
    draw_sprite(sprite_index, -1, x, y)
    
 // Draw Icon:
    if(icon_disappear_length){
       draw_sprite_ext(spr_monitor_icon, icon, x, yy+icon_position, 1, 1, 0, c_white, 1)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
