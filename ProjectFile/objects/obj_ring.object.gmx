<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ring</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.
  
    x_speed     = 0;
    y_speed     = 0;
    magnetized  = 0;
    motion      = 0;
    timer       = 0;
    image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy.

 // Magnetized ring.
    if(magnetized == true)
    {
       instance_create(x, y, obj_ring_magnetized);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animation speed.

    if(motion == 0)
    {
       image_index = global.object_time div 120;
    }
    if(motion == 1 &amp;&amp; timer &gt; 120)
    {
       image_index = global.object_time div 80;
    }
    if(motion == 1 &amp;&amp; timer &lt; 120)
    {
       image_index = global.object_time div 200;
    }    
    

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Motion (Dropped)

 // Exit if magnetized:
    if(magnetized != 1) 
    {
    
 // Apply Motion:
    if(motion == true)
    {
       if(!place_meeting(x+x_speed, y, par_solid))
       {
          x += x_speed;
       }
       else
       {
          x_speed *= -0.25;
       }
       if(!place_meeting(x, y+y_speed, par_solid))
       {
          y += y_speed;
       }
       else
       {
          y_speed *= -0.75;
       }  y_speed += 0.09375  
 
       // Decrease timer:
          if(timer &gt; 0)
          {
             timer -= 1
          }
          else instance_destroy();       
    }   

 // Destroy rings outside the view.
    if(motion == true)
    {
       if(x &lt; view_xview-sprite_width || x &gt; view_xview+view_wview+sprite_width || y &lt; view_yview-sprite_height || y &gt; view_yview+view_hview+sprite_height)
       {
          instance_destroy();
       }
    }

    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Magnetized.
 // Checks if the player has a electro shield. If it does we replace this ring with a magnetized one.
 
 // Exit if in motion.
    if(motion != true)
    {

    if(magnetized == false)
    {
       if(!instance_exists(obj_player)) exit;
       
       var player;
       player = instance_nearest(x, y, obj_player);
       
       if(player != noone)
       {
          if(player.shield == SHIELD_ELECTRICITY)
          {
             if(distance_to_object(player) &lt; 64)
             {
                magnetized = true;
                instance_destroy();
             }
          }
       }
    }
    
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw.

    if(motion == true &amp;&amp; timer &lt; 90)
    {
       if((timer div 4) mod 2)
       {
           draw_sprite_ext(sprite_index, -1, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
       }
    }
    else
    {
       draw_sprite_ext(sprite_index, -1, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
