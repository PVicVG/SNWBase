<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dataselect_cursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.

 // Slot related.
    datacursor_slot_index = 1; // The slot we're currently hovering over.
    
 // Movement.
    datacursor_x              = x;     // Keeps track of the previous x position when we want to move.
    datacursor_direction      = 0;     // The direction we're moving towards.
    datacursor_allow_movement = true;  // Checks if we can allow the cursor to be moved.
    datacursor_lock           = false; // Makes sure to no longer have any behaviour if locked.
    
 // Sprite.
    datacursor_sprite     = spr_dataselect_cursor; // The sprite we'll be using.
    image_speed           = 0.2;                   // This should be obvious.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement.

 // Exit.
    if(datacursor_lock == true) exit;
    
 // Move to the next slot.Â´
    if(datacursor_direction == 0 &amp;&amp; datacursor_allow_movement == true)
    {
       // Move to the right.
          if(datacursor_slot_index != 9 &amp;&amp; keyboard_check_pressed(global.key_right))
          {
             datacursor_x           = x;
             datacursor_direction   = 1;
             datacursor_slot_index += 1; 
             aud_play_sound(general_switch, global.sfx_volume, 1, 0, 0);
          }
          
       // Move to the left.
          if(obj_dataselect_robotnik.state == "idle" &amp;&amp; obj_dataselect_robotnik.active == false)
          {
             if(datacursor_slot_index != 0 &amp;&amp; keyboard_check_pressed(global.key_left))
             {
                datacursor_x           =  x;
                datacursor_direction   = -1;
                datacursor_slot_index -=  1; 
                aud_play_sound(general_switch, global.sfx_volume, 1, 0, 0);
             }          
          }
          else
          if(obj_dataselect_robotnik.state == "idle" &amp;&amp; obj_dataselect_robotnik.active == true)
          {
             if(datacursor_slot_index != 1 &amp;&amp; keyboard_check_pressed(global.key_left))
             {
                datacursor_x           =  x;
                datacursor_direction   = -1;
                datacursor_slot_index -=  1; 
                aud_play_sound(general_switch, global.sfx_volume, 1, 0, 0);
             }          
          }
    }

 // Move outside the no save slot if we want to delete something.
    if((obj_dataselect_robotnik.state == "idle" &amp;&amp; obj_dataselect_robotnik.active == true) &amp;&amp; datacursor_direction == 0)
    {
       if(datacursor_slot_index != 1 &amp;&amp; datacursor_slot_index &lt; 1)
       {
          datacursor_x           = x;          
          datacursor_direction   = 1;
          datacursor_slot_index += 1;
       }  
    }
    
 // Move towards the next slot.
    if(datacursor_direction != 0)
    {
       if(datacursor_direction == 1)
       {
          if(x != datacursor_x+104)
          {
             x += 8;
          }
          if(x &gt;= datacursor_x+104)
          {
             x                    = datacursor_x+104;
             datacursor_direction = 0;
          }
       }
       if(datacursor_direction == -1)
       {
          if(x != datacursor_x-104)
          {
             x -= 8;
          }
          if(x &lt;= datacursor_x-104)
          {
             x                    = datacursor_x-104;
             datacursor_direction = 0;
          }
       }       
    }
  
 // Set global save.
    global.save_selected = datacursor_slot_index;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw correct cursor.

    if(datacursor_slot_index == 0 || datacursor_slot_index == 9)
    {
       datacursor_sprite = spr_dataselect_cursor_small;
    }
    else
    {
       datacursor_sprite = spr_dataselect_cursor;    
    }
    draw_sprite(datacursor_sprite, -1, x, y);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
